---
import { Icon } from 'astro-icon/components';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';
import Button from '~/components/ui/Button.astro';
import profile from '~/assets/favicons/profile.svg?raw';
import czechRepublic from '~/assets/favicons/czech-republic.svg?raw';
import downArrow from '~/assets/favicons/down-arrow.svg?raw';
import basket from '~/assets/favicons/basket.svg?raw';
import email from '~/assets/favicons/email.svg?raw';
import call from '~/assets/favicons/call.svg?raw';
import facebook from '~/assets/favicons/facebook.svg?raw';
import instagram from '~/assets/favicons/instagram.svg?raw';
import fbMessenger from '~/assets/favicons/facebook-messenger.svg?raw';
import messenger from '~/assets/favicons/messenger.svg?raw';

import { getHomePermalink } from '~/utils/permalinks';
import { trimSlash, getAsset } from '~/utils/permalinks';
import type { CallToAction } from '~/types';
import { getLangFromUrl, useTranslations } from '~/i18n/utils';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface ActionLink extends CallToAction {}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  isDark?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  id = 'header',
  links = [],
  actions = [],
  isSticky = false,
  isDark = false,
  isFullWidth = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const t = useTranslations('cz');

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky, dark: isDark },
    'top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out',
  ]}
  {...isSticky ? { 'data-aw-sticky-header': true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>

  <div
    class:list={[
      'relative  text-default py-3 px-3 md:px-6 mx-auto w-full',
      {
        'md:flex md:justify-between': position !== 'center',
      },
      {
        'md:grid md:grid-cols-3 md:items-center': position === 'center',
      },
      {
        'max-w-7xl': !isFullWidth,
      },
    ]}
  >
    <div class="text-white flex items-center col-span-3 md:justify-self-left justify-between">
      <a class="flex" href={getHomePermalink()}>
        <Logo />
      </a>
      <div class="flex bg-[#453A64] rounded-b gap-5">
        <div class="flex items-center gap-2">
          <Fragment set:html={messenger} />
          <div>
            <div class="flex text-nowrap">
              {t('nav.contact.chat')}
            </div>
            {t('nav.contact.online')}
          </div>
        </div>
        <div class="flex items-center gap-2 text-nowrap">
          <Fragment set:html={call} />
          +420 778 11 45 11
        </div>
        <div class="flex items-center gap-2">
          <Fragment set:html={email} />
          podpora@supervazby.cz
        </div>
      </div>
      <div class="flex gap-5">
        <div class="border-2 rounded-2xl w-14 flex justify-center items-center gap-2">
          <Fragment set:html={czechRepublic} />
          <Fragment set:html={downArrow} />
        </div>
        <Fragment set:html={basket} />
        <Fragment set:html={profile} />
      </div>
    </div>

    <nav
      class="text-white items-center w-full md:w-auto hidden md:col-span-2 md:flex text-default overflow-y-auto md:overflow-y-visible md:justify-self-left"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-[0.9375rem] tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? 'dropdown' : ''}>
              {links?.length ? (
                <>
                  <button class="hover:text-link dark:hover:text-white px-4 py-3 flex items-center text-nowrap">
                    {text}{' '}
                    <Icon name="tabler:chevron-down" class="w-3.5 h-3.5 ml-0.5 rtl:ml-0 rtl:mr-0.5 hidden md:inline" />
                  </button>
                  <ul class="dropdown-menu md:backdrop-blur-md dark:md:bg-dark rounded md:absolute pl-4 md:pl-0 md:hidden font-medium md:bg-white/90 md:min-w-[200px] drop-shadow-xl">
                    {links.map(({ text: text2, href: href2 }) => (
                      <li>
                        <a
                          class:list={[
                            'first:rounded-t last:rounded-b md:hover:bg-gray-100 hover:text-link dark:hover:text-white dark:hover:bg-gray-700 py-2 px-5 block whitespace-no-wrap text-nowrap',
                            { 'aw-link-active': href2 === currentPath },
                          ]}
                          href={href2}
                        >
                          {text2}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class:list={[
                    'hover:text-link dark:hover:text-white px-4 py-3 flex items-center text-nowrap',
                    { 'aw-link-active': href === currentPath },
                  ]}
                  href={href}
                >
                  {text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { 'ml-auto rtl:ml-0 rtl:mr-auto': position === 'left' },
        'hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end',
      ]}
    >
      <div class="items-center flex justify-between w-full md:w-auto">
        <div class="flex gap-2 items-center">
          {showToggleTheme && <ToggleTheme iconClass="w-6 h-6 md:w-5 md:h-5 md:inline-block" />}

          <Fragment set:html={facebook} />
          <Fragment set:html={instagram} />
          <Fragment set:html={fbMessenger} />
        </div>
      </div>
    </div>
  </div>
</header>
